
import { useEffect } from "react";
import {
  Settings,
  Bot,
  // Save,
  // TestTube,
  // CheckCircle,
  // AlertCircle,
  BarChart3,

  MessageSquare,
  // LogOut,
  UserCircle,

} from "lucide-react";
import { useAppDispatch, useAppSelector } from "../store/hooks";

import {
  Tabs,
  TabsContent,
  TabsList,
  TabsTrigger,
} from "./ui/tabs";

import { Label } from "./ui/label";

import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "./ui/card";


export function AdminDashboard() {
  const dispatch = useAppDispatch();
  const { user } = useAppSelector((state) => state.auth);


  useEffect(() => {
  
  }, [dispatch]);

  

  return (
    <div className="max-w-3xl  gap-[400px]  mx-auto space-y-6 py-8 px-4 ">
      {/* Header */}
      <Card className="rounded-5xl  shadow-xl p-[10px] bg-background/70 backdrop-blur">
        <CardHeader>
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-3">
              <div className="p-3 bg-primary/10 rounded-full">
                <Settings className="w-6 h-6 text-primary" />
              </div>
              <div>
                <CardTitle className="text-xl font-semibold">
                  –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                </CardTitle>
                <CardDescription className="text-muted-foreground">
                  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≥—Ä—É–∑–æ–≤
                </CardDescription>
              </div>
            </div>
            <div className="flex items-center gap-4">
              <div className="flex items-center gap-2 text-sm">
                <UserCircle className="w-5 h-5 text-muted-foreground" />
                <span>
                  {user?.firstName} {user?.lastName}
                </span>
              </div>
             
            </div>
          </div>
        </CardHeader>
      </Card>

      {/* Tabs */}
      <Tabs defaultValue="bot-settings" className="space-y-6">
        <TabsList className="bg-muted p-1 rounded-xl grid w-full grid-cols-3">
          <TabsTrigger value="bot-settings" className="data-[state=active]:bg-primary data-[state=active]:text-white rounded-lg px-4 py-2">
            –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
          </TabsTrigger>
          <TabsTrigger value="statistics" className="data-[state=active]:bg-primary data-[state=active]:text-white rounded-lg px-4 py-2">
            –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
          </TabsTrigger>
          <TabsTrigger value="messages" className="data-[state=active]:bg-primary data-[state=active]:text-white rounded-lg px-4 py-2">
            –°–æ–æ–±—â–µ–Ω–∏—è
          </TabsTrigger>
        </TabsList>

        {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ */}
        <TabsContent value="bot-settings">
          <Card className="rounded-xl shadow-sm">
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Bot className="w-5 h-5" /> Telegram Bot Configuration
              </CardTitle>
              <CardDescription>
                –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram –±–æ—Ç—É —á–µ—Ä–µ–∑ BotFather
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="flex items-center gap-4">
               
              </div>

              <div className="space-y-4">
                {["token", "username", "welcomeMessage"].map((field) => (
                  <div key={field}>
                    <Label htmlFor={field}>
                      {field === "token"
                        ? "–¢–æ–∫–µ–Ω –±–æ—Ç–∞"
                        : field === "username"
                        ? "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ—Ç–∞"
                        : "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"}
                    </Label>
                  
                  </div>
                ))}

              
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <TabsContent value="statistics">
          <Card className="rounded-xl shadow-sm">
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <BarChart3 className="w-5 h-5" /> –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
              </CardTitle>
              <CardDescription>–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –ø–æ—Å—ã–ª–∫–∞–º</CardDescription>
            </CardHeader>
            <CardContent className="text-muted-foreground">
              <ul className="space-y-2">
                <li>üî¢ –í—Å–µ–≥–æ –∫–æ–º–ø–∞–Ω–∏–π: </li>
                <li>üì¶ –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ—Å—ã–ª–æ–∫:</li>
                <li>üë§ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</li>
              </ul>
            </CardContent>
          </Card>
        </TabsContent>

        {/* –°–æ–æ–±—â–µ–Ω–∏—è */}
        <TabsContent value="messages">
          <Card className="rounded-xl shadow-sm">
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <MessageSquare className="w-5 h-5" /> –°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
              </CardTitle>
              <CardDescription>
                –°–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
              </CardDescription>
            </CardHeader>
            <CardContent>
              <p className="text-muted-foreground italic">
                üì≠ –ü–æ–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ—Ç. –ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤.
              </p>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  );
}